{
  "name": "邓勇博客-github.io",
  "tagline": "记录软件开发过程中的点点滴滴",
  "body": "# 最流行的web开发前端模版\r\n 一个快速打包好的前端站点框架模板，包括基本结构，基本文件和说明\r\n\r\n## HTML5 Boilerplate是什么？解决了什么问题？\r\n对于第一次听说这个人，肯定都有这个疑问把！在网上看了看，发现很多人都认为这个是和Bootstrap一样的东西，这真是大错特错了。\r\n实际上，HTML5 Boilerplate只是一个单纯的HTML模版。\r\n什么？HTML模版？干嘛用？\r\n这里不得不提所有前端开发都会遇到的问题，每次要重新弄一个页面的时候，你们都是怎么做的呢？那个doctype、html、head、body、meta标签，写的多心烦。或者从以前的项目中复制，或者抄一抄Bootstrap推荐的模版等等。但是在做这些事情的时候，有没有想过，自己的写法是否是最好的呢？或者说业界对这个有没有一个比较统一的推荐？那么，答案是有的。\r\nHTML5 Boilerplate就是解决了这么一个问题，它提供了一个十分完善的HTML模版，完善到所有的页面似乎都应该遵守这个规则。\r\n说的这么神乎其神，那么我们还是要一看究竟才行。从官网下载 然后，最核心的的是一个index.html文件，不大，我们来看看它的源码\r\n复制代码\r\n<!DOCTYPE html>\r\n<!--[if lt IE 7]>      <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\"> <![endif]-->\r\n<!--[if IE 7]>         <html class=\"no-js lt-ie9 lt-ie8\"> <![endif]-->\r\n<!--[if IE 8]>         <html class=\"no-js lt-ie9\"> <![endif]-->\r\n<!--[if gt IE 8]><!--> <html class=\"no-js\"> <!--<![endif]-->\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n        <title></title>\r\n        <meta name=\"description\" content=\"\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n        <!-- Place favicon.ico and apple-touch-icon.png in the root directory -->\r\n\r\n        <link rel=\"stylesheet\" href=\"css/normalize.css\">\r\n        <link rel=\"stylesheet\" href=\"css/main.css\">\r\n        <script src=\"js/vendor/modernizr-2.6.2.min.js\"></script>\r\n    </head>\r\n    <body>\r\n        <!--[if lt IE 7]>\r\n            <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\r\n        <![endif]-->\r\n\r\n        <!-- Add your site or application content here -->\r\n        <p>Hello world! This is HTML5 Boilerplate.</p>\r\n\r\n        <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n        <script>window.jQuery || document.write('<script src=\"js/vendor/jquery-1.10.2.min.js\"><\\/script>')</script>\r\n        <script src=\"js/plugins.js\"></script>\r\n        <script src=\"js/main.js\"></script>\r\n\r\n        <!-- Google Analytics: change UA-XXXXX-X to be your site's ID. -->\r\n        <script>\r\n            (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\r\n            function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\r\n            e=o.createElement(i);r=o.getElementsByTagName(i)[0];\r\n            e.src='//www.google-analytics.com/analytics.js';\r\n            r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));\r\n            ga('create','UA-XXXXX-X');ga('send','pageview');\r\n        </script>\r\n    </body>\r\n</html>\r\n复制代码\r\n这可以说就是HTML5 Boilerplate的全部了。大概看一下，肯定会发现有些是和自己以前的写法一样的，有些又是没见过的写法，或者说自己也是这么写的但是从来没想过为什么。下面，就先“解剖”下这个HTML文件把。\r\n \r\n二：浅析index.html\r\n首先，文档类型使用了HTML5文档声明，比起HTML4的那一大长串，这个明显简单明了。而且，兼容全部浏览器。因为IE在设计的时候，对于这种写法也会进入标准模式。所以，以后的文档声明都这样写，省心。\r\n \r\n然后，是这么一大段\r\n<!--[if lt IE 7]>      <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\"> <![endif]-->\r\n<!--[if IE 7]>         <html class=\"no-js lt-ie9 lt-ie8\"> <![endif]-->\r\n<!--[if IE 8]>         <html class=\"no-js lt-ie9\"> <![endif]-->\r\n<!--[if gt IE 8]><!--> <html class=\"no-js\"> <!--<![endif]-->\r\n这段代码很经典。\r\n \r\n首先，我们先看这些条件判断，意思分别是低于IE7，等于IE7，等于IE8，高于IE8。\r\n然后条件注释里面，就有相应的类名，比如在 lt IE 7中，html标签上便会有  lt-ie9 lt-ie8 lt-ie7这3个类，意思分别是低于ie7、8、9 。有什么用呢？其实最大的左右就是在写CSS HACK的时候，因为这样写，就可以不用CSS HACK了，比如如果是ie6，那么html标签上就会有 lt-ie7这个类，直接用CSS优先级覆盖之前的设置即可。\r\n \r\n然后特殊的地方应该就在最后一句了，最后一句的意思是所有大于ie8和非ie浏览器都使用<html class=\"no-js\">这个html头。仔细看会发现里面加了几个残缺的注释标签。有什么用呢，对于大于ie8的ie浏览器，这几个标签完全忽略。对于非ie浏览器。由于不识别[if gt IE 8]，然后和后面的注释一起，会发现整个这部分都被注释了。这样，就实现了最完美的浏览器识别了。\r\n \r\n然后还有一个no-js类。这个主要是会和后面的modernizr.js一起使用。因为modernizr会在浏览器启用的js的时候，把no-js换成js。简单来说这个类可以用来判断浏览器是否启用了js。\r\n \r\n接着，就是\r\n<meta charset=\"utf-8\">\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n<title></title>\r\n<meta name=\"description\" content=\"\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n首先，先设置文档编码，记住这个放最前面（特别注意别放title后面），以免后面代码出现乱码。\r\n接下来便是设置IE使用最新版本来渲染\r\n然后是描述，便于SEO。viewport指定移动端不对网页进行缩放。\r\n这些个元标签基本都是一个网页必须要有的，所以大家可以检查下自己的网站是否漏了什么。\r\n \r\n之后，引入了normalize、main两个css。modernizr这个js。关于这3个文件，后面再详细说明。\r\n \r\n进入主体部分。\r\n首先，看到这么一段\r\n<!--[if lt IE 7]>\r\n      <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\r\n<![endif]-->\r\n对于使用低于IE7版本的用户，给出升级提示，当然，我们可以选择删除这一段或者换成一个中文提示\r\n \r\n然后呢，便是这一段脚本\r\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n<script>window.jQuery || document.write('<script src=\"js/vendor/jquery-1.10.2.min.js\"><\\/script>')</script>\r\n<script src=\"js/plugins.js\"></script>\r\n<script src=\"js/main.js\"></script>\r\n首先，通过CDN引入jquery。这里用的是谷歌的CDN。如果这段照抄，那么，，嘿嘿，网站肯定杯具了。所以这里换成国内的jqueryCDN把，比如七牛的。\r\n然后，判断jQuery对象是否存在。因为CDN有可能挂了。如果jQuery对象不存在，那么我们就可以用自己服务器的jquery把。\r\n然后引入了plugins.js还有main.js。main.js是空的，plugins.js后面详细说明。\r\n \r\n最后一段代码就是引入google统计了。这里，根据自己的需要换成百度统计或者是别的把。就不详细说了。\r\n \r\n至此，HTML5 Boilerplate的最关键的模版HTML算是讲完了。以后要新弄一个页面，就照着这个copy把。\r\n不过，HTML5 Boilerplate提供的还不止这些，下面讲讲单个文件的作用把。\r\n \r\n三：静态文件\r\n打开项目代码，可以看到有挺多的文件的，有些是说明文件，比如doc/路径下的，就不讲了，有些是值得讲讲的，比如css/ js/下的部分文件。挑几个有趣的说说把。\r\n \r\n首先 css目录下有main和normalize\r\nnormalize也许大家都听过，就是一个浏览器重置，里面的每一条css都是进过千千万万的人精挑细选的，基本上这个重置属于公认的了。\r\n里面的具体每条规则就不细讲了，可以百度查看这个项目的文档，或者直接看注释也ok。\r\nmain就是改项目对normalize的补充，可以看到提供了一些基础类名方便大家，比如图片置换，清除浮动等等。\r\n \r\njs提供了个plugins.js\r\n代码如下\r\n复制代码\r\n// Avoid `console` errors in browsers that lack a console.\r\n(function() {\r\n    var method;\r\n    var noop = function () {};\r\n    var methods = [\r\n        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\r\n        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\r\n        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\r\n        'timeStamp', 'trace', 'warn'\r\n    ];\r\n    var length = methods.length;\r\n    var console = (window.console = window.console || {});\r\n\r\n    while (length--) {\r\n        method = methods[length];\r\n\r\n        // Only stub undefined methods.\r\n        if (!console[method]) {\r\n            console[method] = noop;\r\n        }\r\n    }\r\n}());\r\n复制代码\r\n比较简单，就不说明了。解决的主要问题就是用console调试的时候IE报错。这个问题我想大家都遇见过，调试代码忘记删除，线上IE报错，导致js无法继续执行。加了这个，就可以避免掉这问题了。\r\n \r\n还有就是modernizr了，这是个强大的浏览器功能检查js，具体使用可以在官网上看看教程，这里就不说了。\r\n \r\n然后，还提供了一些个文件，比如apache的配置htaccess、 404页面、flash跨域需要的文件crossdomain.xml、爬虫过滤文件robots.txt等，大家按需使用。\r\n \r\n \r\n \r\n至此，HTML5 Boilerplate算是全部理完了，很简单的一个项目，但是很实用，也很漂亮。可以作为开发标配。\r\n\r\n/********************************************/\r\n ★Google统计、图标 和 更多\r\n\r\n压缩包内包含了 一个干净、移动终端友好的HTML模版；优化过的Google统计代码；触摸屏设备上使用的图标（这个可以替换成你自己的）；还有丰富的文档、技巧、窍门。\r\n\r\n★ Normalize.css 和辅助功能\r\n\r\n包含了 Normalize.css v1 版本 — 一个先进的、支持HTML5的CSS reset — 和基础样式、辅助功能、media queries、打印样式。\r\n\r\n★ jQuery 与 Modernizr\r\n\r\n自带了两个优秀的Javascript工具库的最新版本： jQuery (默认链接到 Google的CDN, 如果CDN失效，本地文件作为后备) 和Modernizr 浏览器特性监测工具库。\r\n\r\n★ 高性能\r\n\r\n我们提供了一组 Apache 配置参数，帮你提高网站的性能。 还有几个单独维护的项目：server configs, node build script, 和ant build script. \r\n\r\n[站点链接] https://github.com/h5bp/html5-boilerplate",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}